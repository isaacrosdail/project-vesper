"""Remove DailyIntention in favor of 'today's frog' (add: is_frog on Task model)

Revision ID: b1ff504a81a6
Revises: 39bbb35c76b2
Create Date: 2025-08-28 20:06:30.249523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b1ff504a81a6'
down_revision: Union[str, None] = '39bbb35c76b2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dailyintention')
    op.add_column('task', sa.Column('is_frog', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('task', 'is_frog')
    op.create_table('dailyintention',
    sa.Column('intention', sa.VARCHAR(length=200), server_default=sa.text("'What''s your focus today?'::character varying"), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('dailyintention_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('dailyintention_pkey'))
    )
    # ### end Alembic commands ###

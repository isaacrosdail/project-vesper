/* ==== CSS CUSTOM PROPERTIES (DESIGN TOKEN SYSTEM) ==== */
/* TODO: Ensure I can explain this system perfectly */
/*
* Architecture:
* 1. Theme-specific tokens (--light-*, --dark-*) = actual color values
* 2. Semantic tokens (--bg-dark, --accent-text) = sort of a translation layer to decouple
* 3. Theme switching = CSS that remaps semantic tokens to active theme.
*
* This lets components stay theme-agnostic while supporting unlimited themes (especially once Firefox supports container queries!)
* HMTL never changes, CSS handles all the complexity.
*/
:root {
    /* Global constants */
    --color-success: #166534;
    --color-error: #dc2626;    

    /* =============== LIGHT THEME DEFINITIONS =============== */
    color-scheme: light;

    /* Note: For inverted text, simply directly use the opposite theme's (below in theme mappings, not incl. in definitions obv) */
    /* Example: (on light mode): */
    /* === NEUTRALS === */
    --light-bg-dark: hsl(0 0 90);     /* Pure white base => Main page/canvas background */
    --light-bg: hsl(0 0 95);          /* Subtle off-white => Cards, modals, main content areas */
    --light-bg-light: hsl(0 0 100);   /* input fields. Secondary button backgrounds, alternating rows  */

    --light-text: hsl(0 0 5);           /* for headers/etc, High contrast */
    --light-text-muted: hsl(0 0 30);    /* main text, slightly muted from that */


    --light-border-default: #d1d5db;          /* Borders (border-gray-300) */


    --light-accent-text: oklch(87.2% 0.01 258.338);/* Branded text ("Vesper"), nav items (must work on dark backgrounds) (Tailwind's text-gray-300) */
    --light-text-destructive: hsl(0, 84%, 60%); /* For delete buttons, for example (Tailwind's text-red-500) */
    /* === UI ELEMENTS / ACCENT COLOR(S) === */
    --light-accent-primary: oklch(60% 0.12 250); /* navbar & table headers (AND primary buttons?) */
    --light-ui-hover: oklch(85% 0.05 250);

    /* TODO: Selection text stuff */
    --light-bg-selection: grey;   /* Text selection background */
    --light-text-selection: blue;
    /* =============== END LIGHT THEME DEFINITIONS =============== */

    
    /* =============== DARK THEME DEFINITIONS =============== */
    /* === BACKGROUND HIERARCHY === */
    --dark-bg-dark: hsl(0 0 0);     /* Main page/canvas background (darker) */
    --dark-bg: hsl(0 0 5);          /* Lifted surface: Cards, modals, main content areas */
    --dark-bg-light: hsl(0 0 10);       /* Input fields too? Buttons, dropdowns, menus, toggles, etc. Secondary button backgrounds, alternating rows, muted backgrounds */

    --dark-text: hsl(0 0 95); /* Sharper, higher contrast color for headings/important elements */
    --dark-text-muted: hsl(0 0 70); /* Slightly muted shade for most text */



    --dark-accent-text: white;
    --dark-text-destructive: hsl(0, 84%, 60%);
    /* === UI ELEMENTS / ACCENT COLOR(S) === */
    --dark-accent-primary: oklch(40% 0.12 250);   /* navbar & table headers (AND primary buttons?) */

    /* === BORDERS === */
    --dark-border-default: #6b7280;             /* darker borders */
    /* Selection stuff */
    --dark-bg-selection: grey;      /* Text selection background */
    --dark-text-selection: yellow;

    /* =============== END DARK THEME DEFINITIONS =============== */

    /* ACTIVE THEME MAPPINGS - LIGHT THEME (default) */
    /* === BACKGROUND HIERARCHY === */
    --bg-dark: var(--light-bg-dark);
    --bg: var(--light-bg);
    --bg-light: var(--light-bg-light);

    --text-muted: var(--light-text-muted);
    --text: var(--light-text);

    --border: hsl(0 0% 30%);
    --gradient: linear-gradient(0deg, var(--bg) 95%, var(--bg-light));


    --accent-text: var(--light-accent-text);
    --text-destructive: var(--light-text-destructive);
    --text-inverse: var(--dark-text); /* Note: Using dark's normal text as inverse */

    /* === UI ELEMENTS / ACCENT COLOR(S) === */
    --accent-primary: var(--light-accent-primary);

    /* selection stuff */
    --bg-selection: var(--light-bg-selection);
    --text-selection: var(--light-text-selection);
    /* END ACTIVE THEME MAPPINGS - LIGHT THEME (default) */

    
    @media (prefers-color-scheme: dark) {
        /* --theme: moon; */
        color-scheme: dark;

        /* ACTIVE THEME MAPPINGS - dark THEME (default) */
        /* === BACKGROUND HIERARCHY === */
        --bg-dark: var(--dark-bg-dark);
        --bg: var(--dark-bg);
        --bg-light: var(--dark-bg-light);

        --text-muted: var(--dark-text-muted);     
        --text: var(--dark-text);


        --border: hsl(0 0% 30%);
        --gradient: linear-gradient(0deg, var(--bg) 95%, var(--bg-light));

        
        /* === TEXT === */

        --accent-text: var(--dark-accent-text);
        --text-destructive: var(--dark-text-destructive);
        --text-inverse: var(--light-text); /* Note: Using light's normal text as inverse */

        /* === UI ELEMENTS / ACCENT COLOR(S) === */
        --accent-primary: var(--dark-accent-primary);
        --ui-hover: var(--light-ui-hover);


        /* === BORDERS === */
        --border-default: var(--dark-border-default);
        /* selection stuff */
        --bg-selection: var(--dark-bg-selection);
        --text-selection: var(--dark-text-selection);
        /* END ACTIVE THEME MAPPINGS - dark THEME (default) */
    }
}

/* User Override: Lets the user manually override the system preference with toggle buttons */
:root:has([value="sun"]:checked),
:root[data-theme="light"] {
    /* --theme: sun; */
    color-scheme: light;

    /* ACTIVE THEME MAPPINGS - LIGHT THEME */
    /* === BACKGROUND HIERARCHY === */
    --bg-dark: var(--light-bg-dark);
    --bg: var(--light-bg);
    --bg-light: var(--light-bg-light);

    --text-muted: var(--light-text-muted);
    --text: var(--light-text);

    --border: hsl(0 0% 30%);
    --gradient: linear-gradient(0deg, var(--bg) 95%, var(--bg-light));

    
    --text-destructive: var(--light-text-destructive);
    --text-inverse: var(--dark-text); /* Note: Using dark's normal text as inverse */

    /* === UI ELEMENTS / ACCENT COLOR(S) === */
    --accent-primary: var(--light-accent-primary);



    /* selection stuff */
    --bg-selection: var(--light-bg-selection);
    --text-selection: var(--light-text-selection);
    /* END ACTIVE THEME MAPPINGS - LIGHT THEME (default) */
}

:root:has([value="moon"]:checked),
:root[data-theme="dark"] {
    /* --theme: moon; */
    color-scheme: dark;

    /* ACTIVE THEME MAPPINGS - dark THEME (default) */
    /* === BACKGROUND HIERARCHY === */
    --bg-dark: var(--dark-bg-dark);
    --bg: var(--dark-bg);
    --bg-light: var(--dark-bg-light);

    --text: var(--dark-text);
    --text-muted: var(--dark-text-muted);


    --border: hsl(0 0% 30%);
    --gradient: linear-gradient(0deg, var(--bg) 95%, var(--bg-light));


    --text-destructive: var(--dark-text-destructive);

    --text-inverse: var(--light-text); /* Note: Using light's normal text as inverse */

    /* === UI ELEMENTS / ACCENT COLOR(S) === */
    --accent-primary: var(--dark-accent-primary);


    --border-default: var(--dark-border-default);
    /* selection stuff */
    --bg-selection: var(--dark-bg-selection);
    --text-selection: var(--dark-text-selection);
    /* END ACTIVE THEME MAPPINGS - dark THEME (default) */
}
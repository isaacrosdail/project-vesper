/* ==== COMPONENTS ==== */
/* Reusable blocks: buttons, cards, tables */


/* ======= BUTTONS ======= */
/* Base button styling: shape + ergonomics goes here */
.btn {
    display: inline-flex;       /* icons+text align*/
    align-items: center;        /* for icon+label vertical centering? */
    justify-content: center;    /* center text when full width */
    cursor: pointer;
    user-select: none;
    padding: var(--space-sm) var(--space-md);
    border: var(--border-default);
    border-radius: var(--border-radius);
    gap: var(--gap-sm);
}
/* For icon-only (eg, '+' buttons) */
.btn-icon {
    width: 2rem;
    height: 2rem;
    padding: 0;
    border-radius: 50%;
}
.btn-icon svg {
    width: 1rem;
    height: 1rem;
    pointer-events: none;
}
/* for delete_btn svg, need to move to components.css */
.delete-btn {
    width: 2.5rem;
    padding: var(--space-sm);
}
.delete-btn svg {
    width: 1rem;
    height: 1rem;
}

/* Subtle "pressed" effect for active buttons */
.btn:active {
    transform: translateY(1px);
    filter: brightness(0.95);
}
/* TODO: Focus ring: visual feedback for keyboard users */
.btn:focus-visible {
    outline: red;
    outline-offset: 2px;
}
/* Catch native + ARIA-disabled buttons */
.btn[disabled],
.btn[aria-disabled="true"] {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
}
.btn-primary {
    background-color: var(--accent-subtle);
    border-color: var(--border-color);
}
.btn-secondary {
    background-color: var(--bg-light);
    border-color: var(--border-color);
}
.btn-destructive {
    color: var(--text-destructive);
    border-color: var(--text-destructive);
}
/* Scope hover styles (skip on touchscreen) */
/* Color-mixing with --text ensures light mode buttons get lighter AND dark mode buttons get darker */
@media (hover: hover) {
    .btn-primary:hover {
        background-color: color-mix(in srgb, var(--accent-subtle) 80%, var(--text));
    }
    .btn-secondary:hover {
        background-color: color-mix(in srgb, var(--bg-light) 80%, var(--text));
    }
    .btn-destructive:hover {
        color: var(--bg-light);
        background-color: var(--text-destructive);
    }
}
/* For profile SVG button in navbar, need to refine */
/* TODO: Ought to move these into components.css, no? */
.profile-btn {
    cursor: pointer;
}
.profile-btn svg {
    pointer-events: none;
    width: 25px;
    height: 25px;
}
.profile-modal[open] {
    display: flex;
    flex-direction: column;
    gap: var(--gap-md);
}
dialog {
    background-color: var(--bg);
    padding: var(--space-xl);
    position: fixed;
    top: 30%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: none;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
}
dialog::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
}
/* Modal X button styling */
.modal-close {
    position: absolute;
    inset: 0.5rem 1.5rem auto auto; /* top right bottom left */
    padding: var(--space-xs) var(--space-sm); /* override btn: smaller box */
    color: var(--text-muted);
    background: transparent;
    border: none;
    font-size: var(--font-size-xl);
}
.modal-close:hover {
    color: var(--text-destructive);
}

.tooltip-popup { 
    position: relative; /* also makes it act as anchor for ::after ? */
    border: var(--border-default);
    border-radius: var(--border-radius);
    background-color: color-mix(in srgb, var(--text) 90%, transparent); /* steal other theme's TEXT color - should be appropriate */
    color: var(--bg); /* then use current bg as text for color parity */
    overflow-wrap: break-word;
    padding: 4px 4px;
    margin-top: 8px;
    max-width: 28ch;
}
.tooltip-popup:not(#no-after)::after {
    content: "";
    position: absolute;
    left: var(--carrot-pos, 50%); /* --carrot-pos calculated via JS */
    transform: translate(-50%, -40%);
    border: 0.4rem solid transparent; /* forms our triangle "arrow" */
    border-bottom-color: color-mix(in srgb, var(--text) 90%, transparent);
    opacity: 1;
    top: -0.4rem;
}

/* Card itself: border-radius, shadow, card bg, internal padding, & verical spacing between its children */
.card-dashboard {
    padding: var(--space-lg);
    align-self: stretch;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    background-color: var(--bg);
    border: var(--border-default);
    position: relative; /* for card-title positioning */
    display: flex;
    flex-direction: column;
    gap: var(--gap-md);
    box-shadow: 0px 2px 2px hsla(0, 0%, 0%, 0.07), 0px 4px 4px hsla(0, 0%, 0%, 0.15);

}

.form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: var(--space-md);
}
/* Form & Input Validation Styling (user-valid/invalid is a relatively new feature? Check browser support) */
form input:not([type="checkbox"]):not([type="radio"]):user-valid {
    outline: 2px solid;
    outline-color: var(--color-success);
}
form input:not([type="checkbox"]):not([type="radio"]):user-invalid {
    outline: 2px solid;
    outline-color: var(--color-error);
}
/* For consistent spacing/styling for "CTA + secondary buttons that might be anchor elements" pattern */
.form-actions {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: var(--gap-sm);
}
.form-actions > * {
    min-width: 8rem;
}
/* ===== FORMS, INPUTS ===== */

/* Base input stylings */
/* Base input stylings */
input, select, textarea {
    background-color: var(--bg-light);
    color: var(--text);
    border: var(--border-default);
    border-radius: var(--border-radius);
    padding: 0.5rem 0.75rem;
}
:where(input, select, textarea):focus-visible {
    outline: 2px solid var(--accent-subtle);
    outline-offset: 1px;
}

/* For dashboard quick-entry & JS inline cell edit inputs */
.input-inline {
    padding-block: var(--space-xs); /* top+bottom Slightly tighter */
    border: none;
    border-bottom: var(--border-default);
    font-size: 0.875rem;
}
.radio-row {
    display: flex;
    flex-direction: row;
    gap: var(--gap-sm);
}

/* ======= TABLE COMPONENTS ======= */
/* Needed higher specificity here to override so delete-cell properly blends in to card */
/* TODO: BUG: Fix this & sort out why table-cell class is required for delete-btn's to style properly */
.table-cell.delete-cell {
    border: none;
    padding: 0;
    width: 0; /* prevent us from consuming extra table width */
    background-color: var(--bg);
}
/* TODO: Could prob clean this up, italics to utility class? */
.table-empty {
    text-align: center;
    color: var(--text-muted);
    font-style: italic;
    padding: var(--space-sm) 0;
}
.table-standard {
    caption-side: top;
    table-layout: auto; /* browser calcs column widths */
    border-collapse: collapse;
    width: 100%;
    font-size: 0.875rem;
}
.table-standard th,
.table-standard td {
    padding: var(--space-sm);
    border: var(--border-default);
}
.table-header th {
    background-color: var(--accent-subtle);
    font-weight: var(--font-weight-semibold); /* equivalent to font-semibold in Tailwind */
}
.table-row {
    transition: background-color 25ms ease-out;
}
.table-row .delete-btn {
    visibility: hidden; /* All (table) delete buttons start hidden */
}
.table-row:hover .delete-btn {
    visibility: visible; /* ..and become visible on hover of row */
}
.table-row:nth-child(even) {
    background-color: var(--bg-light);
}
.table-row:hover {
    background-color: var(--accent-subtle);
    color: var(--text-inverse); /* TODO: Needs fixing/tuning */
}

/* ===== CUSTOM COMPONENT STYLINGS ===== */
.context-menu {
    background-color: var(--bg);
    border: var(--border-default);
    border-radius: var(--border-radius);
    position: fixed;  /* important since it takes it out of the DOM flow? */
    max-width: 50%;
    z-index: 200;
}
.context-menu > li {
    padding: var(--space-sm) var(--space-md);
}
/* Style hover so its corners don't jut out from ul element itself */
.context-menu > li:first-child:hover {
    border-radius: var(--border-radius) var(--border-radius) 0 0; /* top-left, top-right only */
}
.context-menu > li:last-child:hover {
    border-radius: 0 0 var(--border-radius) var(--border-radius); /* bottom-left, bottom-right only */
}
.context-menu > li:only-child:hover {
    border-radius: var(--border-radius);
}
.context-menu > li:hover {
    background-color: var(--ui-hover);
    cursor: pointer;
}

/* ======= LAYOUT COMPONENTS ======= */
/* Mimick <fieldset>'s 'title intersects border' effect for container headers */
/* TODO: We'll have to re-tune this since we're using the usual button stylings, need to tweak padding again here too, and font weight? */
.card-title {
    position: absolute; /* TODO: NOTES: breaks the title out of normal flow */
    top: -0.9rem;
    left: 1rem;
    background: linear-gradient(
        to bottom,
        var(--bg-dark) 48%, /* Top half */
        var(--bg) 52%      /* Bottom half */
    );
    display: flex;
    align-items: center;
    gap: var(--gap-sm);

    padding: 0 0.05rem;
}
.card-title h2 {
    font-size: var(--font-size-lg);
    line-height: var(--line-height-higher);
    font-weight: var(--font-weight-semibold);
    pointer-events: none;
}

/* ======= TOAST COMPONENTS ======= */
#toast-container {
    position: fixed;
    display: flex;
    flex-direction: column-reverse;
    gap: var(--gap-sm);
    top: calc(1.3 * var(--min-navbar-height));
    right: 1rem;
    z-index: 400;
    border-radius: var(--border-radius-mild);
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06); /* shadow */
}
.toast {
    border-radius: var(--border-radius-mild);
    border: solid 1px transparent;
    padding: var(--gap-xs) var(--gap-sm);
}
.toast-success {
    background-color: color-mix(in srgb, var(--color-success) 10%, white); /* Derive from bg-success */
    color: var(--color-success);
    border-color: var(--color-success);
}
.toast-error {
    background-color: color-mix(in srgb, var(--color-error) 10%, white);
    color: var(--color-error);
    border-color: var(--color-error);
}

/* ==== FOOTER ==== */
footer {
    text-align: center;
    padding: 10px;
    font-size: 0.9em;
}

/* TABS (for tabbed modal(s) */
.tabs button.active {
    transform: translateY(1px);
    filter: brightness(0.95);
}
